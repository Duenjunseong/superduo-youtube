services:
  # PostgreSQL 데이터베이스
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: superduo_youtube
      POSTGRES_USER: superduo
      POSTGRES_PASSWORD: superduo123
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U superduo -d superduo_youtube']
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Celery 브로커)
  redis:
    image: redis:7-alpine
    volumes:
      - ./data/redis:/data
    restart: unless-stopped

  # Django 웹 애플리케이션
  web:
    build: .
    user: '0:0'
    ports:
      - '8001:8001'
    environment:
      - DEBUG=False
      - SECRET_KEY=ABE194DEC1A343D7FB0CDB05600ACCC57CFA4BEB64DCDDA3A53DDE2562EDB9B3
      - DATABASE_URL=postgres://superduo:superduo123@db:5432/superduo_youtube
      - REDIS_URL=redis://redis:6379/0
      - MEDIA_ROOT=/app/media
    volumes:
      - ./data/media:/app/media
      - ./data/static:/app/staticfiles
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 15 &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --config gunicorn.conf.py config.wsgi:application
      "

  # Celery 워커
  celery:
    build: .
    user: '0:0'
    environment:
      - DEBUG=False
      - SECRET_KEY=ABE194DEC1A343D7FB0CDB05600ACCC57CFA4BEB64DCDDA3A53DDE2562EDB9B3
      - DATABASE_URL=postgres://superduo:superduo123@db:5432/superduo_youtube
      - REDIS_URL=redis://redis:6379/0
      - MEDIA_ROOT=/app/media
    volumes:
      - ./data/media:/app/media
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    command: celery -A config worker --loglevel=info --concurrency=4
